unit unitCadAgendamento;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.DBCtrls,
  Data.DB, Vcl.Grids, Vcl.DBGrids, Vcl.Mask;

type
  TformCadAgendamentos = class(TForm)
    Panel1: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label4: TLabel;
    Label3: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    btnConsultas: TButton;
    DBGrid2: TDBGrid;
    DBLookupComboBox1: TDBLookupComboBox;
    DBEdit1: TDBEdit;
    DBNavigator1: TDBNavigator;
    txtData: TDBEdit;
    DBLookupComboBox2: TDBLookupComboBox;
    DBEdit3: TDBEdit;
    Button1: TButton;
    procedure btnConsultasClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  formCadAgendamentos: TformCadAgendamentos;

implementation

{$R *.dfm}

uses unitDM, unitConsultas;

procedure TformCadAgendamentos.btnConsultasClick(Sender: TObject);
begin
  Consultas.ShowModal;
end;

procedure TformCadAgendamentos.Button1Click(Sender: TObject);
begin
  if (txtData.Text = '') then
    begin
       ShowMessage('Insira a data do agendamento')
    end

  else
    begin
        DM.queryAgendamento.Close;
        DM.queryAgendamento.SQL.Clear;
        DM.queryAgendamento.SQL.Add('INSERT INTO agendamentos (dataconsulta, idpaciente, idprofissional)');
        DM.queryAgendamento.SQL.Add('VALUES(:pData, :pIdPaciente, :pIdProfissional;');
        DM.queryAgendamento.ParamByName('pData').AsString :=  txtData.Text;
        DM.queryAgendamento.ParamByName('pIdPaciente').AsString :=  DBLookupComboBox1.KeyField;
        DM.queryAgendamento.ParamByName('pIdProfissional').AsString :=  DBLookupComboBox2.KeyField;
        DM.queryAgendamento.ExecSQL;
        ShowMessage('Agendamento Inserido com Sucesso!')
      end;


end;

end.
